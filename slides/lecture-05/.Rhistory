x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2)) #* xy.pca$sdev[1]
lz2 <- sqrt(sum(z2^2)) #* xy.pca$sdev[2]
Az <- vecangle(x,z)
Az2 <- vecangle(x,z2)
newz <- lz*c(cos(Az),sin(Az))
newz2 <- lz2*c(cos(Az2),sin(Az2))
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny), ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1],newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2)) #* xy.pca$sdev[1]
lz2 <- sqrt(sum(z2^2)) #* xy.pca$sdev[2]
Az <- vecangle(x,z)
Az2 <- vecangle(x,z2)
newz <- lz*c(cos(Az),sin(Az))
newz2 <- lz2*c(cos(Az2),sin(Az2))
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny), ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1],newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
vecangle <- function(x, y, radians = TRUE) {
x = as.vector(x)
y = as.vector(y)
theta <- acos( drop(x %*% y) / (sqrt(sum(x^2)) * sqrt(sum(y^2))))
if (!radians)
theta <- theta* (180/pi)
return(theta)
}
vproj <- function(x,y){
x = as.vector(x)
y = as.vector(y)
lx <- sqrt(sum(x^2))
Cxy <- (x %*% y) / lx
Pxy <- Cxy * (x/lx) # we've already calculated the component so reuse it!
list(proj=Pxy, comp=drop(Cxy) )
}
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2)) #* xy.pca$sdev[1]
lz2 <- sqrt(sum(z2^2)) #* xy.pca$sdev[2]
Az <- vecangle(x,z)
Az2 <- vecangle(x,z2)
newz <- lz*c(cos(Az),sin(Az))
newz2 <- lz2*c(cos(Az2),sin(Az2))
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1],newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(X,Y)
Az
print
print(1)
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2)) #* xy.pca$sdev[1]
lz2 <- sqrt(sum(z2^2)) #* xy.pca$sdev[2]
Az <- vecangle(x,z)
Az2 <- vecangle(x,z2)
newz <- lz*c(cos(Az),sin(Az))
newz2 <- lz2*c(cos(Az2),sin(Az2))
print(Az)
print(newz)
print(Az2)
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1], newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(X,Y)
vecangle(xy.pca$x[,1],z[,1])
cos(vecangle(xy.pca$x[,1],z[,1]))
cos(vecangle(xy.pca$x[,1],xy.pca$x[,2]))
vecangle(xy.pca$x[,2],z[,1])
sqrt(sum(xy.pca$x[,1]^2))
sqrt(sum(xy.pca$x[,2]^2))
sqrt(sum(z^2))
sqrt(sum(z[,1^2))
sqrt(sum(z[,1]^2))
sqrt(sum(z[,2]^2))
sin(vecangle(xy.pca$x[,1],xy.pca$x[,2]))
sin(vecangle(xy.pca$x[,1],z[,1]))
sin(vecangle(xy.pca$x[,1],z[,1])) * 14.75
xy.pca
xy.pca$rotation[,1]
xy.pca$rotation[,1] * 18
vecangle <- function(x, y, radians = TRUE) {
x = as.vector(x)
y = as.vector(y)
theta <- acos( drop(x %*% y) / (sqrt(sum(x^2)) * sqrt(sum(y^2))))
if (!radians)
theta <- theta* (180/pi)
return(theta)
}
vproj <- function(x,y){
x = as.vector(x)
y = as.vector(y)
lx <- sqrt(sum(x^2))
Cxy <- (x %*% y) / lx
Pxy <- Cxy * (x/lx) # we've already calculated the component so reuse it!
list(proj=Pxy, comp=drop(Cxy) )
}
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2)) #* xy.pca$sdev[1]
lz2 <- sqrt(sum(z2^2)) #* xy.pca$sdev[2]
Az <- vecangle(x,z)
Az2 <- vecangle(x,z2)
#newz <- lz*c(cos(Az),sin(Az))
newz <- lz * xy.pca$rotation[,1]
newz2 <- lz2*c(cos(Az2),sin(Az2))
print(Az)
print(newz)
print(Az2)
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1], newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(A,Y)
drawvectors.PC(X,Y)
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2))
lz2 <- sqrt(sum(z2^2))
newz <- lz * xy.pca$rotation[,1]
if(xy.pca$rotation[1,1] > 0)
newz = -newz
newz2 <- lz2 * xy.pca$rotation[,12]
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1], newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(X,Y)
xy.pca$rotation
xy.pca$rotation[1,1]
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2))
lz2 <- sqrt(sum(z2^2))
newz <- lz * xy.pca$rotation[,1]
if (xy.pca$rotation[1,1] < 0)
newz <- -newz
newz2 <- lz2 * xy.pca$rotation[,2]
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1])
minx <- min(newx[1],newy[1], newz[1])
maxy <- max(newx[2],newy[2], newz[2])
miny <- min(newx[2],newy[2], newz[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1], newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(X,Y)
vecangle <- function(x, y, radians = TRUE) {
x = as.vector(x)
y = as.vector(y)
theta <- acos( drop(x %*% y) / (sqrt(sum(x^2)) * sqrt(sum(y^2))))
if (!radians)
theta <- theta* (180/pi)
return(theta)
}
vproj <- function(x,y){
x = as.vector(x)
y = as.vector(y)
lx <- sqrt(sum(x^2))
Cxy <- (x %*% y) / lx
Pxy <- Cxy * (x/lx) # we've already calculated the component so reuse it!
list(proj=Pxy, comp=drop(Cxy) )
}
drawvectors.PC <- function(x,y){
x = scale(x, center=T,scale=F)
y = scale(y, center=T,scale=F)
lx <- sqrt(sum(x^2))
ly <- sqrt(sum(y^2))
A <- vecangle(x,y)
newx <- c(lx, 0)
newy <- ly*c(cos(A),sin(A))
p <- vproj(newx,newy)
XY = cbind(x,y)
xy.pca = prcomp(XY,retx=T)
z <- xy.pca$x[,1]
z2 <- xy.pca$x[,2]
lz <- sqrt(sum(z^2))
lz2 <- sqrt(sum(z2^2))
newz <- lz * xy.pca$rotation[,1]
if (xy.pca$rotation[1,1] < 0)
newz <- -newz
newz2 <- lz2 * xy.pca$rotation[,2]
# setup empty plot w/appropriate axes
# pad values by 10 perc. to get nice margins
maxx <- max(newx[1],newy[1], newz[1], newz2[1])
minx <- min(newx[1],newy[1], newz[1], newz2[1])
maxy <- max(newx[2],newy[2], newz[2], newz2[2])
miny <- min(newx[2],newy[2], newz[2], newz2[2])
tcoords = matrix(c(maxx+0.15*abs(maxx), maxy+0.15*abs(maxy),
maxx+0.15*abs(maxx), miny-0.15*abs(miny),
minx-0.15*abs(minx), maxy+0.15*abs(maxy),
minx-0.15*abs(minx), miny-0.15*abs(miny)),
ncol=2, byrow=TRUE)
# type = 'n' means don't plot anything
plot(tcoords[,1], tcoords[,2], type='n',xlab='', ylab='',asp=1)
# draw arrows for vectors
arrows(0, 0, newx[1],newx[2],col='blue',lwd=2)
text(newx[1],newx[2],"x", pos=4, offset=0.1,col='blue')
arrows(0, 0, newy[1],newy[2],col='red',lwd=2)
text(newy[1],newy[2],"y", pos=4, offset=0.1,col='red')
arrows(0, 0, p$proj[1], p$proj[2], lty='dashed',lwd=2)
text(p$proj[1],p$proj[2],"Px", pos=4, offset=0.1)
arrows(0, 0, newz[1], newz[2],col='green',lwd=2)
text(newz[1],newz[2],"PC1", pos=4, offset=0.1,col='green')
arrows(0, 0, newz2[1],newz2[2],col='green',lwd=2)
text(newz2[1],newz2[2],"PC2", pos=4, offset=0.1,col='green')
list(x = newx, y=newy, proj=p$proj, comp=p$comp)
}
drawvectors.PC(X,Y)
getwd()
xy.pca$loadings
xy.pca$rotation
xy.pca
1.58/0.76
cov(z)
z.pca <- prcomp(z, center=T)
z.pca
z.pca <- prcomp(z, center=T)
cov(z)
cor(z)
cov(z)
z.pca <- prcomp(z, center=T, retx=T)
z.pca
cor(z, z.pca$x)
acos(0.702)
acos(0.702) * (180/pi)
acos(0.967) * (180/pi)
newz <- lz * xy.pca$rotation[,1]
cov(z)
z.pca <- prcomp(z, center=T, retx=T)
z.pca
cor(z, z.pca$x)  # corr. orig variables w/PC scores
cor(z)
bioenv <- read.delim('~/gits/github/Bio723/datasets/bioenv.txt')
abundance <- subset(bioenv, select=c(a,b,c,d,e))
cor(abundance)
a.pca <- prcomp(abundance, center=T, retx=T)
a.pca
summary(a.pca)
i.pca <- prcomp(subset(iris, select=-Species), center=T, retx=T)
summary(i.pca)
iris.sub <- subset(iris, select=-Species)
cov(iris.sub)
?iris
biplot(i.pca)
i.pca
biplot(i.pca. pch=16)
biplot(i.pca, pch=16)
?biplot
iris.sub <- subset(iris, select=-Species)
cov(iris.sub)
i.pca <- prcomp(iris.sub, center=T, retx=T)
summary(i.pca)
i.pca
plot(i.pca)
plot(i.pca, main="Variance Summarizd by PCA of Iris Data Set")
plot(i.pca, main="Variance Summarizd by PCA of Iris Data Set",xlab="PCs")
z.pca
V <- z.pca$rotation
L <- diag(z.pca$sdev)
V %*% L
A <- z.pca$rotation # coefficients
L <- diag(z.pca$sdev) # lengths of PCs
A %*% L
A %*% L  # loadings
zc.pca <- prcomp(z, center=T,scale.=T, retx=T)
zc.pca$roation %*% diag(zc.pca$sdev)
zc.pca$rotation %*% diag(zc.pca$sdev)
acos(zc.pca$rotation %*% diag(zc.pca$sdev))
acos(zc.pca$rotation %*% diag(zc.pca$sdev)) * (180/pi)
acos(-zc.pca$rotation %*% diag(zc.pca$sdev)) * (180/pi)
cor(scale(z))
acos(cor(scale(z)))*(180/pi)
A %*% L  # loadings
(A %*% L)**2  # loadings
var(z)
sd(z)
apply(z, 2, sd)
apply(z, 2, var)
(A %*% L)**2  # loadings
apply(z, 2, var)
